#!/usr/bin/env python
"""
–ì—Ä—É–ø–ø–∞–ª–∞—Ä–≥–∞ —Ç—É—É—Ä–∞ –±”©–ª“Ø—à—Ç“Ø—Ä“Ø–ª–≥”©–Ω –∫–æ—à—É–º—á–∞ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø
"""

import os
import django
import sys

# Django –æ—Ä–Ω–æ—Ç—É—É
sys.path.append('/Users/k_beknazarovicloud.com/Downloads/su_attendance-main 2')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'attendance_system.settings')
django.setup()

from django.contrib.auth.models import User
from core.models import UserProfile, Student, Course, Group

print("üöÄ –ö–æ—à—É–º—á–∞ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø...")

# –ì—Ä—É–ø–ø–∞–ª–∞—Ä–¥—ã –∞–ª—É—É
groups = list(Group.objects.filter(name__in=['CS-11', 'CS-12', 'CS-13', 'MATH-21', 'MATH-22', 'ECO-11', 'ECO-12']))

first_names = [
    '–ê–∑–∞–º–∞—Ç', '–ë–µ–∫–∂–∞–Ω', '–î–∞—Å—Ç–∞–Ω', '–≠—Ä–º–µ–∫', '–ñ–∞–Ω—ã–±–µ–∫',
    '–ê–π–≥“Ø–ª', '–ë–µ—Ä–º–µ—Ç', '–ì“Ø–ª–º–∏—Ä–∞', '–î–∏–Ω–∞—Ä–∞', '–≠–ª—å–º–∏—Ä–∞',
    '–ö–∞–Ω–∞—Ç', '–ú–∞—Ä–∞—Ç', '–ù—É—Ä–ª–∞–Ω', '–¢–∏–ª–µ–∫', '–£–ª–∞–Ω',
    '–ñ–∞–º–∞–ª', '–ö“Ø–ª–∞–π—ã–º', '–ú–µ–¥–∏–Ω–∞', '–ù—É—Ä–≥“Ø–ª', '–°–∞–ª—Ç–∞–Ω–∞—Ç',
    '–¢–µ–º–∏—Ä', '–ë–∞–∫—ã—Ç', '–ù—É—Ä–±–æ–ª', '–≠–ª–¥–∏—è—Ä', '–ê–ª—Ç—ã–Ω–±–µ–∫'
]

last_names = [
    '–ê–±–¥–∏–µ–≤', '–ë–µ–π—à–µ–Ω–æ–≤', '–ò—Å–∞–∫–æ–≤', '–ö–∞–¥—ã—Ä–æ–≤', '–ú–∞–º–±–µ—Ç–æ–≤',
    '–¢–æ–∫—Ç–æ–≥—É–ª–æ–≤–∞', '–≠—Ä–º–∞—Ç–æ–≤–∞', '–ñ—É–º–∞–±–∞–µ–≤–∞', '–¢—É—Ä—Å—É–Ω–æ–≤–∞', '–û–º—É—Ä–æ–≤–∞',
    '–°–∞–¥—ã–∫–æ–≤', '–ê—Å–∞–Ω–æ–≤', '–£—Å–µ–Ω–æ–≤', '–ú—É—Ä–∑–∞–ª–∏–µ–≤', '–¢–∞—à–∏–µ–≤'
]

# –£—á—É—Ä–¥–∞–≥—ã —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏–Ω —Å–∞–Ω—ã–Ω –∞–ª—É—É
current_count = Student.objects.count()
start_number = 51  # student51–¥–µ–Ω –±–∞—à—Ç–∞–π–±—ã–∑

students_per_group = 50 // len(groups)  # –ê—Ä –±–∏—Ä –≥—Ä—É–ø–ø–∞–≥–∞ 7 —Å—Ç—É–¥–µ–Ω—Ç
extra = 50 % len(groups)  # –ö–∞–ª–≥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä

created_count = 0

for idx, group in enumerate(groups):
    count_for_group = students_per_group + (1 if idx < extra else 0)
    
    print(f"\nüìö {group.name} –≥—Ä—É–ø–ø–∞—Å—ã–Ω–∞ {count_for_group} —Å—Ç—É–¥–µ–Ω—Ç –∫–æ—à—É—É...")
    
    for i in range(count_for_group):
        student_num = start_number + created_count
        username = f'student{student_num}'
        
        first = first_names[created_count % len(first_names)]
        last = last_names[created_count % len(last_names)]
        full_name = f'{first} {last} {created_count+1}'
        
        # User —Ç“Ø–∑“Ø“Ø
        user, created = User.objects.get_or_create(
            username=username,
            defaults={
                'first_name': first,
                'last_name': last,
                'email': f'{username}@student.university.edu.kg',
                'is_active': True
            }
        )
        if created:
            user.set_password('password123')
            user.save()
        
        # UserProfile —Ç“Ø–∑“Ø“Ø
        profile, _ = UserProfile.objects.get_or_create(
            user=user,
            defaults={'role': 'STUDENT'}
        )
        
        # Student —Ç“Ø–∑“Ø“Ø
        student, stud_created = Student.objects.get_or_create(
            user=user,
            defaults={
                'name': full_name,
                'course': group.course,
                'group': group
            }
        )
        
        if stud_created:
            created_count += 1
            print(f"  ‚úÖ {full_name} ({username}) -> {group.name}")

print(f"\n‚úÖ –ñ–∞–ª–ø—ã {created_count} —Å—Ç—É–¥–µ–Ω—Ç –∫–æ—à—É–ª–¥—É")
print(f"üìä –ê–∑—ã—Ä –±–∞—Ä–¥—ã–≥—ã {Student.objects.count()} —Å—Ç—É–¥–µ–Ω—Ç")

# –ì—Ä—É–ø–ø–∞–ª–∞—Ä –±–æ—é–Ω—á–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print("\nüìà –ì–†–£–ü–ü–ê–õ–ê–† –ë–û–Æ–ù–ß–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
print("-" * 60)
for group in groups:
    count = Student.objects.filter(group=group).count()
    print(f"  {group.name}: {count} —Å—Ç—É–¥–µ–Ω—Ç")
