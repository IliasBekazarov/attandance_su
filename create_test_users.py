#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø —Å–∫—Ä–∏–ø—Ç–∏
100 user: 10 teacher, 50 student, 40 parent
"""

import os
import django
import sys

# Django –æ—Ä–Ω–æ—Ç—É—É
sys.path.append('/Users/k_beknazarovicloud.com/Downloads/su_attendance-main 2')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'attendance_system.settings')
django.setup()

from django.contrib.auth.models import User
from core.models import UserProfile, Teacher, Student, Course, Group

def create_test_data():
    print("üöÄ –¢–µ—Å—Ç –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä—ã–Ω —Ç“Ø–∑“Ø“Ø –±–∞—à—Ç–∞–ª–¥—ã...")
    
    # –ö—É—Ä—Å—Ç–∞—Ä –∂–∞–Ω–∞ –≥—Ä—É–ø–ø–∞–ª–∞—Ä
    print("\nüìö –ö—É—Ä—Å—Ç–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø...")
    course1, _ = Course.objects.get_or_create(
        name='–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
        year=1,
        defaults={'faculty': '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∂–∞–Ω–∞ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä'}
    )
    course2, _ = Course.objects.get_or_create(
        name='–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
        year=2,
        defaults={'faculty': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∂–∞–Ω–∞ –§–∏–∑–∏–∫–∞'}
    )
    course3, _ = Course.objects.get_or_create(
        name='–≠–∫–æ–Ω–æ–º–∏–∫–∞',
        year=1,
        defaults={'faculty': '–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∂–∞–Ω–∞ –ë–∏–∑–Ω–µ—Å'}
    )
    
    print("‚úÖ 3 –∫—É—Ä—Å —Ç“Ø–∑“Ø–ª–¥“Ø")
    
    # –ì—Ä—É–ø–ø–∞–ª–∞—Ä
    print("\nüë• –ì—Ä—É–ø–ø–∞–ª–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø...")
    groups = []
    group_names = ['CS-11', 'CS-12', 'CS-13', 'MATH-21', 'MATH-22', 'ECO-11', 'ECO-12']
    courses = [course1, course1, course1, course2, course2, course3, course3]
    
    for name, course in zip(group_names, courses):
        group, _ = Group.objects.get_or_create(
            name=name,
            course=course
        )
        groups.append(group)
    
    print(f"‚úÖ {len(groups)} –≥—Ä—É–ø–ø–∞ —Ç“Ø–∑“Ø–ª–¥“Ø")
    
    # 10 –ú–£–ì–ê–õ–ò–ú
    print("\nüë®‚Äçüè´ 10 –º—É–≥–∞–ª–∏–º–¥–∏ —Ç“Ø–∑“Ø“Ø...")
    teacher_names = [
        '–ê–ª–º–∞–∑ –ö–∞—Å—ã–º–æ–≤', '–ê–π–∂–∞–Ω –¢–æ–∫—Ç–æ–≥—É–ª–æ–≤–∞', '–ù—É—Ä–±–µ–∫ –≠—Ä–º–∞—Ç–æ–≤',
        '–ì“Ø–ª–Ω–∞—Ä–∞ –ñ—É–º–∞–±–∞–µ–≤–∞', '–≠—Ä–ª–∞–Ω –¢—É—Ä–¥—É–±–µ–∫–æ–≤', '–ê—Å–µ–ª—å –ö–µ–Ω–∂–µ–±–∞–µ–≤–∞',
        '–ú–∞—Ä–∞—Ç –°–∞–¥—ã–∫–æ–≤', '–ñ–∞–º–∏–ª–∞ –ò—Å–º–∞–∏–ª–æ–≤–∞', '–¢–∏–ª–µ–∫ –ë–µ–π—à–µ–Ω–æ–≤', '–î–∏–Ω–∞—Ä–∞ –ú—É—Å–∞–µ–≤–∞'
    ]
    
    degrees = ['PROFESSOR', 'DOCENT', 'LECTURER', 'ASSISTANT', 'TEACHER']
    
    for i, name in enumerate(teacher_names, 1):
        username = f'teacher{i}'
        
        # User —Ç“Ø–∑“Ø“Ø
        user, created = User.objects.get_or_create(
            username=username,
            defaults={
                'first_name': name.split()[0],
                'last_name': name.split()[1],
                'email': f'{username}@university.edu.kg',
                'is_active': True
            }
        )
        if created:
            user.set_password('password123')
            user.save()
        
        # UserProfile —Ç“Ø–∑“Ø“Ø
        profile, _ = UserProfile.objects.get_or_create(
            user=user,
            defaults={'role': 'TEACHER'}
        )
        
        # Teacher —Ç“Ø–∑“Ø“Ø
        teacher, _ = Teacher.objects.get_or_create(
            user=user,
            defaults={
                'name': name,
                'degree': degrees[i % len(degrees)],
                'department': '–ö–∞—Ñ–µ–¥—Ä–∞ ' + str((i % 3) + 1)
            }
        )
        
        if created:
            print(f"  ‚úÖ {name} ({username}) - {teacher.get_degree_display()}")
    
    print(f"‚úÖ 10 –º—É–≥–∞–ª–∏–º —Ç“Ø–∑“Ø–ª–¥“Ø")
    
    # 50 –°–¢–£–î–ï–ù–¢
    print("\nüë®‚Äçüéì 50 —Å—Ç—É–¥–µ–Ω—Ç—Ç–∏ —Ç“Ø–∑“Ø“Ø...")
    first_names = [
        '–ê–∑–∞–º–∞—Ç', '–ë–µ–∫–∂–∞–Ω', '–î–∞—Å—Ç–∞–Ω', '–≠—Ä–º–µ–∫', '–ñ–∞–Ω—ã–±–µ–∫',
        '–ê–π–≥“Ø–ª', '–ë–µ—Ä–º–µ—Ç', '–ì“Ø–ª–º–∏—Ä–∞', '–î–∏–Ω–∞—Ä–∞', '–≠–ª—å–º–∏—Ä–∞',
        '–ö–∞–Ω–∞—Ç', '–ú–∞—Ä–∞—Ç', '–ù—É—Ä–ª–∞–Ω', '–¢–∏–ª–µ–∫', '–£–ª–∞–Ω',
        '–ñ–∞–º–∞–ª', '–ö“Ø–ª–∞–π—ã–º', '–ú–µ–¥–∏–Ω–∞', '–ù—É—Ä–≥“Ø–ª', '–°–∞–ª—Ç–∞–Ω–∞—Ç'
    ]
    
    last_names = [
        '–ê–±–¥–∏–µ–≤', '–ë–µ–π—à–µ–Ω–æ–≤', '–ò—Å–∞–∫–æ–≤', '–ö–∞–¥—ã—Ä–æ–≤', '–ú–∞–º–±–µ—Ç–æ–≤',
        '–¢–æ–∫—Ç–æ–≥—É–ª–æ–≤–∞', '–≠—Ä–º–∞—Ç–æ–≤–∞', '–ñ—É–º–∞–±–∞–µ–≤–∞', '–¢—É—Ä—Å—É–Ω–æ–≤–∞', '–û–º—É—Ä–æ–≤–∞'
    ]
    
    student_count = 0
    for i in range(50):
        username = f'student{i+1}'
        first = first_names[i % len(first_names)]
        last = last_names[i % len(last_names)]
        full_name = f'{first} {last}'
        
        # User —Ç“Ø–∑“Ø“Ø
        user, created = User.objects.get_or_create(
            username=username,
            defaults={
                'first_name': first,
                'last_name': last,
                'email': f'{username}@student.university.edu.kg',
                'is_active': True
            }
        )
        if created:
            user.set_password('password123')
            user.save()
        
        # UserProfile —Ç“Ø–∑“Ø“Ø
        profile, _ = UserProfile.objects.get_or_create(
            user=user,
            defaults={'role': 'STUDENT'}
        )
        
        # –ì—Ä—É–ø–ø–∞–Ω—ã —Ç–∞–Ω–¥–æ–æ
        group = groups[i % len(groups)]
        
        # Student —Ç“Ø–∑“Ø“Ø
        student, _ = Student.objects.get_or_create(
            user=user,
            defaults={
                'name': full_name,
                'course': group.course,
                'group': group
            }
        )
        
        if created:
            student_count += 1
            if student_count % 10 == 0:
                print(f"  ‚úÖ {student_count} —Å—Ç—É–¥–µ–Ω—Ç —Ç“Ø–∑“Ø–ª–¥“Ø...")
    
    print(f"‚úÖ 50 —Å—Ç—É–¥–µ–Ω—Ç —Ç“Ø–∑“Ø–ª–¥“Ø")
    
    # 40 –ê–¢–ê-–≠–ù–ï
    print("\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ 40 –∞—Ç–∞-—ç–Ω–µ–Ω–∏ —Ç“Ø–∑“Ø“Ø...")
    parent_first_names = [
        '–ê—Å–∞–Ω', '–ë–æ–ª–æ—Ç', '–î–º–∏—Ç—Ä–∏–π', '–ö—É–±–∞—Ç', '–ú–∏—Ä–ª–∞–Ω',
        '–ì“Ø–ª–Ω–∞—Ä–∞', '–ñ–∞–º–∏–ª–∞', '–ù–∞–∑–∏—Ä–∞', '–°–∞–ª–∏–º–∞', '–¢—ã–Ω–∞—Ä–∞'
    ]
    
    parent_count = 0
    students = list(Student.objects.all()[:40])  # –ë–∏—Ä–∏–Ω—á–∏ 40 —Å—Ç—É–¥–µ–Ω—Ç
    
    for i in range(40):
        username = f'parent{i+1}'
        first = parent_first_names[i % len(parent_first_names)]
        last = last_names[i % len(last_names)]
        
        # User —Ç“Ø–∑“Ø“Ø
        user, created = User.objects.get_or_create(
            username=username,
            defaults={
                'first_name': first,
                'last_name': last,
                'email': f'{username}@parent.university.edu.kg',
                'is_active': True
            }
        )
        if created:
            user.set_password('password123')
            user.save()
            parent_count += 1
        
        # UserProfile —Ç“Ø–∑“Ø“Ø - –±—É–ª –∂–µ—Ä–¥–µ —Ä–æ–ª—å —Ç—É—É—Ä–∞ –∫–æ—é–ª—É—É –∫–µ—Ä–µ–∫
        profile, prof_created = UserProfile.objects.get_or_create(
            user=user,
            defaults={'role': 'PARENT'}
        )
        
        # –≠–≥–µ—Ä –º—É—Ä–¥–∞ –±–∞—à–∫–∞ —Ä–æ–ª—å –º–µ–Ω–µ–Ω —Ç“Ø–∑“Ø–ª—Å”©, —Ä–æ–ª—å ”©–∑–≥”©—Ä—Ç“Ø“Ø
        if not prof_created and profile.role != 'PARENT':
            profile.role = 'PARENT'
            profile.save()
        
        # –°—Ç—É–¥–µ–Ω—Ç–∫–µ –±–∞–π–ª–∞–Ω—ã—à—Ç—ã—Ä—É—É
        if i < len(students):
            profile.students.add(students[i])
            print(f"  ‚úÖ {user.get_full_name()} -> {students[i].name}")
        
        if parent_count % 10 == 0 and parent_count > 0:
            print(f"  ‚úÖ {parent_count} –∞—Ç–∞-—ç–Ω–µ —Ç“Ø–∑“Ø–ª–¥“Ø...")
    
    print(f"‚úÖ {parent_count} –∞—Ç–∞-—ç–Ω–µ —Ç“Ø–∑“Ø–ª–¥“Ø")
    
    # –ñ—ã–π—ã–Ω—Ç—ã–∫
    print("\n" + "="*60)
    print("üìä –ñ–´–ô–´–ù–¢–´–ö:")
    print("="*60)
    print(f"üë• –ë–∞—Ä–¥—ã–∫ –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä: {User.objects.count()}")
    print(f"üë®‚Äçüè´ –ú—É–≥–∞–ª–∏–º–¥–µ—Ä: {Teacher.objects.count()}")
    print(f"üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä: {Student.objects.count()}")
    print(f"üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ê—Ç–∞-—ç–Ω–µ–ª–µ—Ä: {UserProfile.objects.filter(role='PARENT').count()}")
    print(f"üìö –ö—É—Ä—Å—Ç–∞—Ä: {Course.objects.count()}")
    print(f"üë• –ì—Ä—É–ø–ø–∞–ª–∞—Ä: {Group.objects.count()}")
    print("="*60)
    print("\n‚ú® –ë–∞—Ä–¥—ã–∫ –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä–¥—ã–Ω —Å—ã—Ä —Å”©–∑“Ø: password123")
    print("\nüéâ –¢–µ—Å—Ç –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä—ã –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø —Ç“Ø–∑“Ø–ª–¥“Ø!")

if __name__ == '__main__':
    try:
        create_test_data()
    except Exception as e:
        print(f"\n‚ùå –ö–∞—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
