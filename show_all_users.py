#!/usr/bin/env python
"""
–ë–∞—Ä–¥—ã–∫ –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä–¥—ã–Ω —Ç–æ–ª—É–∫ –æ—Ç—á—ë—Ç—É
"""

import os
import django
import sys

# Django –æ—Ä–Ω–æ—Ç—É—É
sys.path.append('/Users/k_beknazarovicloud.com/Downloads/su_attendance-main 2')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'attendance_system.settings')
django.setup()

from django.contrib.auth.models import User
from core.models import UserProfile, Teacher, Student, Course, Group

print("\n" + "="*70)
print("üìä ATTENDANCE SYSTEM - –ö–û–õ–î–û–ù–£–£–ß–£–õ–ê–†–î–´–ù –¢–û–õ–£–ö –û–¢–ß–Å–¢–£")
print("="*70)

print("\nüéØ –ë–ê–†–î–´–ö –ö–û–õ–î–û–ù–£–£–ß–£–õ–ê–†:")
print("-" * 70)
print(f"  üë• –ñ–∞–ª–ø—ã: {User.objects.count()} –∫–æ–ª–¥–æ–Ω—É—É—á—É")
print(f"  ‚úÖ –ê–∫—Ç–∏–≤–¥“Ø“Ø: {User.objects.filter(is_active=True).count()}")
print(f"  ‚ùå –ê–∫—Ç–∏–≤–¥“Ø“Ø —ç–º–µ—Å: {User.objects.filter(is_active=False).count()}")

print("\nüë®‚Äçüè´ –ú–£–ì–ê–õ–ò–ú–î–ï–†:")
print("-" * 70)
teachers = Teacher.objects.all()
print(f"  –ñ–∞–ª–ø—ã: {teachers.count()} –º—É–≥–∞–ª–∏–º")
for teacher in teachers:
    print(f"    ‚Ä¢ {teacher.name} ({teacher.user.username}) - {teacher.get_degree_display()}")

print("\nüë®‚Äçüéì –°–¢–£–î–ï–ù–¢–¢–ï–†:")
print("-" * 70)
students = Student.objects.all()
print(f"  –ñ–∞–ª–ø—ã: {students.count()} —Å—Ç—É–¥–µ–Ω—Ç")
groups_dict = {}
for student in students:
    group_name = student.group.name
    if group_name not in groups_dict:
        groups_dict[group_name] = []
    groups_dict[group_name].append(student.name)

for group_name in sorted(groups_dict.keys()):
    print(f"\n  üìö {group_name} ({len(groups_dict[group_name])} —Å—Ç—É–¥–µ–Ω—Ç):")
    for student_name in groups_dict[group_name][:5]:
        print(f"    ‚Ä¢ {student_name}")
    if len(groups_dict[group_name]) > 5:
        print(f"    ... –∂–∞–Ω–∞ –¥–∞–≥—ã {len(groups_dict[group_name]) - 5} —Å—Ç—É–¥–µ–Ω—Ç")

print("\nüë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ê–¢–ê-–≠–ù–ï–õ–ï–†:")
print("-" * 70)
parents = UserProfile.objects.filter(role='PARENT')
print(f"  –ñ–∞–ª–ø—ã: {parents.count()} –∞—Ç–∞-—ç–Ω–µ")
for parent in parents[:10]:
    children = parent.students.all()
    print(f"    ‚Ä¢ {parent.user.get_full_name()} ({parent.user.username})")
    print(f"      –ë–∞–ª–¥–∞—Ä—ã: {', '.join([s.name for s in children[:3]])}")
    if children.count() > 3:
        print(f"      ... –∂–∞–Ω–∞ –¥–∞–≥—ã {children.count() - 3} —Å—Ç—É–¥–µ–Ω—Ç")

print("\nüìö –ö–£–†–°–¢–ê–† –ñ–ê–ù–ê –ì–†–£–ü–ü–ê–õ–ê–†:")
print("-" * 70)
courses = Course.objects.all()
print(f"  –ñ–∞–ª–ø—ã –∫—É—Ä—Å—Ç–∞—Ä: {courses.count()}")
for course in courses:
    groups = Group.objects.filter(course=course)
    students_count = Student.objects.filter(course=course).count()
    print(f"    ‚Ä¢ {course.name} ({course.year}-–∫—É—Ä—Å)")
    print(f"      –ì—Ä—É–ø–ø–∞–ª–∞—Ä: {groups.count()} | –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä: {students_count}")

print("\nüîê –ö–ò–†“Æ“Æ –ú–ê–ê–õ–´–ú–ê–¢–¢–ê–†–´:")
print("-" * 70)
print("  –ë–∞—Ä–¥—ã–∫ –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä–¥—ã–Ω —Å—ã—Ä —Å”©–∑“Ø: password123")
print("\n  –ú–∏—Å–∞–ª–¥–∞—Ä:")
print("    –ê–¥–º–∏–Ω: admin / admin123")
print("    –ú—É–≥–∞–ª–∏–º: teacher1 / password123")
print("    –°—Ç—É–¥–µ–Ω—Ç: student1 / password123")
print("    –ê—Ç–∞-—ç–Ω–µ: parent1 / password123")

print("\n" + "="*70)
print("‚úÖ –û—Ç—á—ë—Ç –∞—è–∫—Ç–∞–¥—ã!")
print("="*70 + "\n")
